name: Deploy Dashboard to ECS

on:
  push:
    branches:
      - main
    paths:
      - 'packages/dashboard/**'
      - '.github/workflows/deploy-dashboard.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: PROD

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Create ECR repository if not exists
        run: |
          aws ecr describe-repositories --repository-names veyla-dashboard || \
          aws ecr create-repository --repository-name veyla-dashboard \
            --image-scanning-configuration scanOnPush=true \
            --encryption-configuration encryptionType=AES256

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: veyla-dashboard
          IMAGE_TAG: ${{ github.sha }}
        working-directory: packages/dashboard
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} \
            --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} \
            --build-arg NEXT_PUBLIC_APP_URL=${{ secrets.NEXT_PUBLIC_APP_URL }} \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Get existing ECS service
        id: get-service
        continue-on-error: true
        run: |
          aws ecs list-services --cluster veyla-prod > services.json
          echo "services=$(cat services.json)" >> $GITHUB_OUTPUT

      - name: Deploy to ECS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: veyla-dashboard
          IMAGE_TAG: ${{ github.sha }}
        run: |
          TASK_FAMILY="veyla-dashboard-task"
          
          # Get current task definition
          TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition $TASK_FAMILY)
          
          # Create new task definition
          NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" \
            '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities) | del(.registeredAt) | del(.registeredBy)')
          
          # Register new task definition
          NEW_TASK_INFO=$(echo $NEW_TASK_DEFINITION | aws ecs register-task-definition --cli-input-json file:///dev/stdin)
          NEW_REVISION=$(echo $NEW_TASK_INFO | jq '.taskDefinition.revision')
          
          # Update service with new task definition
          aws ecs update-service \
            --cluster veyla-prod \
            --service veyla-dashboard \
            --task-definition ${TASK_FAMILY}:${NEW_REVISION} \
            --force-new-deployment
